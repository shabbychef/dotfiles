# aliases, functions and settings which are 
# useful just about everywhere (for me)
#
# Steven E. Pav

# complains now....
#export GREP_OPTIONS='--color=auto'

# find by extension and print. very useful.
# fex R finds all R files.
fex() {
  find . -name '*.'$1 -type f -print
}
# find and grep
gex() {
	local -r ext="$1"; shift
  find . -name '*.'$ext -type f -exec grep $@ {} \;
}

alias lsh='ls -AlhS'
alias lst='ls -Alht'

lsth() {
	ls -Alht $@ | head -n 8
}
lsthed() {
	ls -Alht $@ | head -n $(( $(tput lines) - 2))
}
gsthed() {
	git status | head -n $(( $(tput lines) - 2))
}



lshh() {
	ls -AlhS $@ | head -n 8
}

alias ripit='abcde -c ~/.abcde.conf'

# R install on the command line. slick.
rinstall() {
	INSTALLR=${HOME}/bin/install3.r
	TAILARGS='-- --with-keep.source'
	if [ ! -f "$INSTALLR" ]; then
		TAILARGS=''
		INSTALLR=/usr/share/doc/littler/examples/install2.r
	fi
	if [ ! -f "$INSTALLR" ]; then
		INSTALLR=/usr/lib/R/site-library/littler/examples/install2.r
	fi
	if [ ! -f "$INSTALLR" ]; then
		INSTALLR=$(locate install2.r)
	fi
	if [ ! -f "$INSTALLR" ]; then
		set -o errexit
		set -o pipefail
		set -o errtrace
		>&2 echo "install2.r not found" 
		exit 1
	fi

	sudo r $INSTALLR -r http://CRAN.rstudio.com/ \
		-r http://shabbychef.github.io/drat/ \
		-r http://eddelbuettel.github.io/drat \
		-r http://ghrr.github.io/drat \
		-r file:///srv/rsync/shares/lran \
		$TAILARGS $@ 
}

alias dc='docker-compose'
alias dcr='docker-compose run'
alias dcrr='docker-compose run --rm'
alias dockviz='docker run --rm -v /var/run/docker.sock:/var/run/docker.sock nate/dockviz'

alias amazon='nohup google-chrome-beta www.amazon.com'
alias netflix='nohup google-chrome-stable www.netflix.com'
alias unspace='rename "s/ /_/g"'

alias hed='head -n $(( $(tput lines) - 2))'
alias tal='tail -n $(( $(tput lines) - 2))'

# cf https://stackoverflow.com/a/44849814/164611
# modified slightly
# want to 
# export DOT_FREQ=1000000 or pipe 2 to /dev/null on this?
headtail() {
	stdbuf -i0 -o0 -e0 awk -v offset=${MAX_LINES:-10} -v everydot=${DOT_FREQ:-10000} \
          '{
               if (NR <= offset) print;
               else {
                   a[NR] = $0;
                   delete a[NR-offset];
									 if (NR % everydot == 0) { printf "." > "/dev/stderr" }
							 }
           }
           END {
             print "" > "/dev/stderr";
             for(i=NR-offset+1 > offset ? NR-offset+1: offset+1 ;i<=NR;i++)
             { print a[i]}
           }'
}

# cat, hed and tal last written file
catl() {
	cat $(ls -At | head -n 1)
}
hedl() {
	hed $(ls -At | head -n 1)
}
tall() {
	tal $(ls -At | head -n 1)
}
granch() {
	git checkout $(git branch | grep $@)
}
# vi the last written file. yolo!
vil() {
	vi $(ls -At | head -n 1)
}
docker_start() {
	# FML, Y U NO Daemon?
	# cf https://forums.docker.com/t/restart-docker-from-command-line/9420/6
	open --background -a Docker
}

# vim:ts=2:sw=2:tw=79:fdm=marker:fmr=FOLDUP,UNFOLD:cms=#%s:syn=sh:ft=sh:ai:si:cin:nu:fo=croql:cino=p0t0c5(0:
